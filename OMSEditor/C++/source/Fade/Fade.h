#pragma once


/********************************************/
//	フェードクラス
/********************************************/
class Fade
{
public:
	//------------------------------------------------------
	//	定数
	//------------------------------------------------------
	enum MODE{ FADE_NONE, FADE_IN, FADE_OUT, MAX };

	//------------------------------------------------------
	//	基本パラメータ
	//------------------------------------------------------
	static MODE m_eMode;		/*	フェードイン、フェードアウト、何もしない	*/
	static BYTE m_bySpeed;		/*	フェードする速度							*/
	static BYTE m_byLimit;		/*	どこまでフェードするか(0〜255の範囲)		*/
	static BYTE m_byAlpha;		/*	α値(0〜255)								*/
	static DWORD m_dwColor;		/*	カラー(0x00000000 〜 0x00ffffff)			*/

	//------------------------------------------------------
	//	初期化
	//------------------------------------------------------
	static void Initialize();


	//------------------------------------------------------
	//	設定
	//------------------------------------------------------
	static void Set(MODE eMode, BYTE Speed, BYTE Limit, BYTE StartAlpha, unsigned long Color = 0x00000000);	/*	フル設定版			*/
	static void Set(MODE eMode, BYTE Speed, unsigned long Color = 0x00000000);													/*	簡易版				*/


	//------------------------------------------------------
	//	更新と描画
	//------------------------------------------------------
	static void Update();
	static void Render(u32 dwFlags = RS::COPY);

	//------------------------------------------------------
	//	Get_Set
	//------------------------------------------------------
	static bool isFadeStop(){ return (m_eMode == FADE_NONE); }
};