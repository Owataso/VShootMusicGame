#pragma once

enum class OMS_RESULT;

/********************************************/
//	トラック情報
/********************************************/
struct Track
{
	int iSize;     // トラックチャンクデータのサイズ [4byte]
	char *cData;   // トラックデータ（イベントの羅列）へのポインタ
};

/********************************************/
//	MIDIをロードして分解するデータ
/********************************************/
struct MIDILoadData
{
	// ヘッダチャンクデータ
	int iHeadChunkSize;
	//============================================================================================================================
	// shortにしないと2バイト読み込みのときにエンディアン変換で値がおかしくなっちゃう！！！！！！！！！めっちゃ重要
	short sFormat;
	short sNumTrack;
	short sDivision;
	//============================================================================================================================

	// トラックチャンクデータ(可変長配列)
	Track *tagTrackDatas;
};


/********************************************/
//	MIDI読み込み用<static class>
/********************************************/
class MIDI_Loader
{
public:
	//===============================================
	//	MIDI読み込んで、データを引数に吐き出す
	//===============================================
	static OMS_RESULT LoadMIDI(MIDILoadData *out, LPCSTR lpcFileName);

private:
	//===============================================
	//	トラックチャンク解析
	//===============================================
	static void LoadTrack(MIDILoadData& track, int no);
	static void LoadTrackALL(MIDILoadData &track, int no);
};